pluginManagement {
  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
  }

  // ✅ 1차: Kotlin 플러그인 버전 명시 (여기서만 버전 지정, 모듈 쪽엔 버전 쓰지 않음)
  plugins {
    id("org.jetbrains.kotlin.android") version "1.9.22"
    id("org.jetbrains.kotlin.jvm")     version "1.9.22"
  }

  // ✅ 2차: 혹시 다른 경로로도 올라오면 전부 1.9.22로 강제
  resolutionStrategy {
    eachPlugin {
      if (requested.id.id.startsWith("org.jetbrains.kotlin")) {
        useVersion("1.9.22")
      }
    }
  }

  // ---- React Native / Expo includeBuild 유지 ----
  def rnGradlePlugin = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine(
        "node","--print",
        "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
      )
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  includeBuild(rnGradlePlugin)

  def expoPluginsPath = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine(
        "node","--print",
        "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })"
      )
    }.standardOutput.asText.get().trim(),
    "../android/expo-gradle-plugin"
  ).absolutePath
  includeBuild(expoPluginsPath)
}

plugins {
  id("com.facebook.react.settings")
  id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv("EXPO_USE_COMMUNITY_AUTOLINKING") == "1") {
    ex.autolinkLibrariesFromCommand()
  } else {
    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
  }
}
expoAutolinking.useExpoModules()
expoAutolinking.useExpoVersionCatalog()

rootProject.name = "CROSS"
include(":app")
includeBuild(expoAutolinking.reactNativeGradlePlugin)
